Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    TAG
    WORDS

Grammar

Rule 0     S' -> xml
Rule 1     xml -> opentag words children closetag
Rule 2     xml -> alonetag words
Rule 3     opentag -> START attributes GT
Rule 4     closetag -> END
Rule 5     alonetag -> START attributes GTS
Rule 6     attributes -> ID EQUAL VALUE attributes
Rule 7     attributes -> empty
Rule 8     children -> xml children
Rule 9     children -> empty
Rule 10    words -> ID words
Rule 11    words -> empty
Rule 12    empty -> <empty>

Terminals, with rules where they appear

END                  : 4
EQUAL                : 6
GT                   : 3
GTS                  : 5
ID                   : 6 10
START                : 3 5
TAG                  : 
VALUE                : 6
WORDS                : 
error                : 

Nonterminals, with rules where they appear

alonetag             : 2
attributes           : 3 5 6
children             : 1 8
closetag             : 1
empty                : 7 9 11
opentag              : 1
words                : 1 2 10
xml                  : 8 0

Parsing method: LALR

state 0

    (0) S' -> . xml
    (1) xml -> . opentag words children closetag
    (2) xml -> . alonetag words
    (3) opentag -> . START attributes GT
    (5) alonetag -> . START attributes GTS

    START           shift and go to state 2

    alonetag                       shift and go to state 1
    opentag                        shift and go to state 3
    xml                            shift and go to state 4

state 1

    (2) xml -> alonetag . words
    (10) words -> . ID words
    (11) words -> . empty
    (12) empty -> .

    ID              shift and go to state 7
    $end            reduce using rule 12 (empty -> .)
    START           reduce using rule 12 (empty -> .)
    END             reduce using rule 12 (empty -> .)

    words                          shift and go to state 5
    empty                          shift and go to state 6

state 2

    (3) opentag -> START . attributes GT
    (5) alonetag -> START . attributes GTS
    (6) attributes -> . ID EQUAL VALUE attributes
    (7) attributes -> . empty
    (12) empty -> .

    ID              shift and go to state 10
    GT              reduce using rule 12 (empty -> .)
    GTS             reduce using rule 12 (empty -> .)

    attributes                     shift and go to state 9
    empty                          shift and go to state 8

state 3

    (1) xml -> opentag . words children closetag
    (10) words -> . ID words
    (11) words -> . empty
    (12) empty -> .

    ID              shift and go to state 7
    START           reduce using rule 12 (empty -> .)
    END             reduce using rule 12 (empty -> .)

    words                          shift and go to state 11
    empty                          shift and go to state 6

state 4

    (0) S' -> xml .



state 5

    (2) xml -> alonetag words .

    START           reduce using rule 2 (xml -> alonetag words .)
    END             reduce using rule 2 (xml -> alonetag words .)
    $end            reduce using rule 2 (xml -> alonetag words .)


state 6

    (11) words -> empty .

    START           reduce using rule 11 (words -> empty .)
    END             reduce using rule 11 (words -> empty .)
    $end            reduce using rule 11 (words -> empty .)


state 7

    (10) words -> ID . words
    (10) words -> . ID words
    (11) words -> . empty
    (12) empty -> .

    ID              shift and go to state 7
    $end            reduce using rule 12 (empty -> .)
    START           reduce using rule 12 (empty -> .)
    END             reduce using rule 12 (empty -> .)

    words                          shift and go to state 12
    empty                          shift and go to state 6

state 8

    (7) attributes -> empty .

    GT              reduce using rule 7 (attributes -> empty .)
    GTS             reduce using rule 7 (attributes -> empty .)


state 9

    (3) opentag -> START attributes . GT
    (5) alonetag -> START attributes . GTS

    GT              shift and go to state 14
    GTS             shift and go to state 13


state 10

    (6) attributes -> ID . EQUAL VALUE attributes

    EQUAL           shift and go to state 15


state 11

    (1) xml -> opentag words . children closetag
    (8) children -> . xml children
    (9) children -> . empty
    (1) xml -> . opentag words children closetag
    (2) xml -> . alonetag words
    (12) empty -> .
    (3) opentag -> . START attributes GT
    (5) alonetag -> . START attributes GTS

    END             reduce using rule 12 (empty -> .)
    START           shift and go to state 2

    alonetag                       shift and go to state 1
    empty                          shift and go to state 16
    children                       shift and go to state 17
    opentag                        shift and go to state 3
    xml                            shift and go to state 18

state 12

    (10) words -> ID words .

    START           reduce using rule 10 (words -> ID words .)
    END             reduce using rule 10 (words -> ID words .)
    $end            reduce using rule 10 (words -> ID words .)


state 13

    (5) alonetag -> START attributes GTS .

    ID              reduce using rule 5 (alonetag -> START attributes GTS .)
    START           reduce using rule 5 (alonetag -> START attributes GTS .)
    END             reduce using rule 5 (alonetag -> START attributes GTS .)
    $end            reduce using rule 5 (alonetag -> START attributes GTS .)


state 14

    (3) opentag -> START attributes GT .

    ID              reduce using rule 3 (opentag -> START attributes GT .)
    START           reduce using rule 3 (opentag -> START attributes GT .)
    END             reduce using rule 3 (opentag -> START attributes GT .)


state 15

    (6) attributes -> ID EQUAL . VALUE attributes

    VALUE           shift and go to state 19


state 16

    (9) children -> empty .

    END             reduce using rule 9 (children -> empty .)


state 17

    (1) xml -> opentag words children . closetag
    (4) closetag -> . END

    END             shift and go to state 20

    closetag                       shift and go to state 21

state 18

    (8) children -> xml . children
    (8) children -> . xml children
    (9) children -> . empty
    (1) xml -> . opentag words children closetag
    (2) xml -> . alonetag words
    (12) empty -> .
    (3) opentag -> . START attributes GT
    (5) alonetag -> . START attributes GTS

    END             reduce using rule 12 (empty -> .)
    START           shift and go to state 2

    alonetag                       shift and go to state 1
    empty                          shift and go to state 16
    children                       shift and go to state 22
    opentag                        shift and go to state 3
    xml                            shift and go to state 18

state 19

    (6) attributes -> ID EQUAL VALUE . attributes
    (6) attributes -> . ID EQUAL VALUE attributes
    (7) attributes -> . empty
    (12) empty -> .

    ID              shift and go to state 10
    GT              reduce using rule 12 (empty -> .)
    GTS             reduce using rule 12 (empty -> .)

    attributes                     shift and go to state 23
    empty                          shift and go to state 8

state 20

    (4) closetag -> END .

    $end            reduce using rule 4 (closetag -> END .)
    START           reduce using rule 4 (closetag -> END .)
    END             reduce using rule 4 (closetag -> END .)


state 21

    (1) xml -> opentag words children closetag .

    START           reduce using rule 1 (xml -> opentag words children closetag .)
    END             reduce using rule 1 (xml -> opentag words children closetag .)
    $end            reduce using rule 1 (xml -> opentag words children closetag .)


state 22

    (8) children -> xml children .

    END             reduce using rule 8 (children -> xml children .)


state 23

    (6) attributes -> ID EQUAL VALUE attributes .

    GT              reduce using rule 6 (attributes -> ID EQUAL VALUE attributes .)
    GTS             reduce using rule 6 (attributes -> ID EQUAL VALUE attributes .)

